#!/usr/bin/env bash
#░████████████████████████████████████████████████████████████████████████████░#
#░█                                                                          █░#
#░█                                                         ██               █░#
#░█           ██████                              ██████   ░██               █░#
#░█          ░██░░░██ ██████  ██████  ██████████ ░██░░░██ ██████             █░#
#░█          ░██  ░██░░██░░█ ██░░░░██░░██░░██░░██░██  ░██░░░██░              █░#
#░█          ░██████  ░██ ░ ░██   ░██ ░██ ░██ ░██░██████   ░██               █░#
#░█          ░██░░░   ░██   ░██   ░██ ░██ ░██ ░██░██░░░    ░██               █░#
#░█          ░██     ░███   ░░██████  ███ ░██ ░██░██       ░░██              █░#
#░█          ░░      ░░░     ░░░░░░  ░░░  ░░  ░░ ░░         ░░               █░#
#░█                                                                          █░#
#░████████████████████████████████████████████████████████████████████████████░#

PS1='\u@\h'
PROMPT_COMMAND='history -a;'

_ps1_gke() {
  local context project zone cluster conf
  if [[ -n $KUBECONFIG ]]; then
    conf="$KUBECONFIG"
  else
    conf="$HOME/.kube/config"
  fi
  if [[ ! -r $conf ]]; then return; fi
  context="$(sed -e '/^[ \t]*current-context/!d' -e 's/[ \t]*current-context: *//' $conf)"

  if [[ -z $context ]]; then return; fi
  IFS=_ read _ project zone cluster <<< $context

  if [[ -z $project ]] || [[ -z $cluster ]]; then return; fi
  echo " k8s:($project|$cluster)"
}

_ps1_gcloud() {
  local gdir aconf conf gc_project

  if ! hash gcloud 2> /dev/null; then return; fi

  gdir="$HOME/.config/gcloud"
  aconf="$gdir/active_config"

  if [[ ! -r $aconf ]]; then return; fi
  conf="$gdir/configurations/config_$(<$aconf)"

  if [[ ! -r $conf ]]; then return; fi
  gc_project="$(sed -e '/^ *project/!d' -e 's/ *project *= *//' $conf)"

  if [[ -z $gc_project ]]; then return; fi
  echo " gcloud:($gc_project)"
}

_ps1_git() {
  local branch
  branch="$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')"

  if [[ -z $branch ]]; then return; fi
  echo " git:($branch)"
}

# Rapidly import our bash history into sqlite
if hash hist 2> /dev/null; then
  PROMPT_COMMAND+='hist import > /dev/null;'
fi

PS1="$PS1\$(_ps1_gke)\$(_ps1_gcloud)\$(_ps1_git) \n \w $ "
